@{
    Page.Title = string.Format("Razor - {0}", "Exercise 03");
    Layout = "~/_Layout.cshtml";

    var title = "";
    var artistid = "0";
    var year = "";
    var label = "";

    var db = Database.Open("Chinook");
    var aritistquery = "SELECT ArtistId, Name "
        + "From Artists "
        + "Order by Name";
    var artistlist = db.Query(aritistquery);

    //validator control execute on the server side
    Validation.Add("Title",
        Validator.Required("Title is required"),
        Validator.StringLength(160, 1, "Title is required"));

    Validation.Add("ArtistId",
        Validator.Integer("ArtistId must be a number.")
        );

    Validation.Add("Year",
        Validator.Required("ReleaseYear is required"),
        Validator.Range(1950, 2020, "Year is nout of range, 1950 to today")
        );
    Validation.Add("Label",
        Validator.StringLength(50, 1, "Label is limited to 50 characters")
        );

}
@section head {

}
@section banner {
    <h1>@Page.Title</h1>
}
@if (IsPost)
{
    title = Request.Form["Title"];
    artistid = Request.Form["ArtistId"];
    year = Request.Form["Year"];
    label = Request.Form["Label"];
    var thebutton = Request.Form["FormButton"];
    if (thebutton.Equals("Clear"))
    {
        title = "";
        artistid = "0";
        year = "";
        label = "";
    }
    else
    {
        if (Validation.IsValid())
        {
            try
            {
                var inscommand = "INSERT INTO Albums "
                    + "(Title, ArtistID, ReleaseYear, ReleaseLabel "
                    + "VALUES(@0, @1, @2, @3, 0)";
                db.Execute(inscommand, title,
                    artistid.Equals("0") ? null : artistid,                    
                    string.IsNullOrEmpty(year) ? null : year,
                    string.IsNullOrEmpty(label) ? null : label);
                <div class="col-12 text-center">
                    <p style="color:green">
                        Product has been ADDED
                    </p>
                </div>
            }
            catch (Exception ex)
            {
                <div class="col-12 text-center">
                    <p style="color:firebrick; font-size:large">
                        Processing error: @ex.Message
                    </p>
                </div>
            }
        }
    }
}

}

@Html.ValidationSummary()
<form id="theForm" action="" method="post">
    <div class="row row-cols-2">
        @*Title*@
        <div class="col text-right">
            <label id="lbltitle" for="Title">Title:</label>
        </div>
        <div class="col text-left">
            <input type="text" name="Title" value="@title" />
        </div><br />
        @* Artist*@
        <div class="col text-right">
            <label id="lblArtistList" for="ArtistList">Artist:</label>
        </div><br />
        <div class="col text-left">
            <select name="ArtistList">
                <option value="0">select...</option>
                @foreach (var acollectionrow in artistlist)
                {
                    if (acollectionrow.Artistid.ToString() == artistid)
                    {
                        <option value="@acollectionrow[0]" selected>@acollectionrow[1]</option>
                    }
                    else
                    {
                        <option value="@acollectionrow[0]" selected>@acollectionrow[1]</option>
                    }
                }
            </select>
        </div><br />
        @* Year *@
        <div class="col text-right">
            <label id="lblYear" for="Year">Year:</label>
        </div>
        <div class="col text-left">
            <input type="number" name="Year" value="@year"  />
        </div><br />
        @* Label *@
        <div class="col text-right">
            <label id="lblLabel" for="Lable">Label:</label>
        </div>
        <div class="col text-left">
            <input type="text" name="Label" value="@label" />q
        </div>
    </div>
    <div class="row">
        <div class="col-12 text-center">
            <input type="submit" id="FormButton" name="FormButton"
                   class="btn btn-primary" value="Add" />
            <input type="submit" id="FormButton" name="FormButton" formnovalidate
                   class="btn" value="Clear" />
        </div>

    </div>


</form>